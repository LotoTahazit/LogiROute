import 'package:flutter/foundation.dart';
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// –°–µ—Ä–≤–∏—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è API –∫–ª—é—á–∞–º–∏
/// 
/// ‚ö†Ô∏è –í–ê–ñ–ù–û: –í—Å–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ .env —Ñ–∞–π–ª–µ!
/// –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∫–æ–º–º–∏—Ç—å—Ç–µ .env —Ñ–∞–π–ª –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π!
class ApiConfigService {
  // üîë Google Maps API Keys
  static String get _googleMapsWebKey {
    final key = dotenv.env['GOOGLE_MAPS_WEB_KEY'];
    if (key == null || key.isEmpty) {
      throw Exception(
        '‚ùå Google Maps Web API key not configured.\n'
        'Please check your environment configuration.',
      );
    }
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ API –∫–ª—é—á–∞
    if (!_isValidApiKey(key)) {
      throw Exception(
        '‚ùå Invalid Google Maps Web API key format.\n'
        'Please verify your API key configuration.',
      );
    }
    return key;
  }
  
  static String get _googleMapsAndroidKey {
    final key = dotenv.env['GOOGLE_MAPS_ANDROID_KEY'];
    if (key == null || key.isEmpty) {
      throw Exception(
        '‚ùå Google Maps Android API key not configured.\n'
        'Please check your environment configuration.',
      );
    }
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ API –∫–ª—é—á–∞
    if (!_isValidApiKey(key)) {
      throw Exception(
        '‚ùå Invalid Google Maps Android API key format.\n'
        'Please verify your API key configuration.',
      );
    }
    return key;
  }
  
  /// –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Google Maps API –∫–ª—é—á –¥–ª—è —Ç–µ–∫—É—â–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
  static String get googleMapsApiKey {
    return kIsWeb ? _googleMapsWebKey : _googleMapsAndroidKey;
  }
  
  /// Web API –∫–ª—é—á (—è–≤–Ω–æ)
  static String get webApiKey => _googleMapsWebKey;
  
  /// Android API –∫–ª—é—á (—è–≤–Ω–æ)
  static String get androidApiKey => _googleMapsAndroidKey;
  
  // üåê OSRM API
  static String get osrmBaseUrl {
    return dotenv.env['OSRM_BASE_URL'] ?? 
           'https://router.project-osrm.org/route/v1/driving';
  }
  
  // üó∫Ô∏è Google APIs URLs (–ø—É–±–ª–∏—á–Ω—ã–µ URL, –Ω–µ —Ç—Ä–µ–±—É—é—Ç –∑–∞—â–∏—Ç—ã)
  static const String googleRoadsApiUrl = 'https://roads.googleapis.com/v1/snapToRoads';
  static const String googlePlacesApiUrl = 'https://maps.googleapis.com/maps/api/place/details/json';
  static const String googleDirectionsApiUrl = 'https://maps.googleapis.com/maps/api/directions/json';
  static const String googleGeocodingApiUrl = 'https://maps.googleapis.com/maps/api/geocode/json';
  
  /// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ API –∫–ª—é—á–∞ Google Maps
  /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–ª—é—á–∞ –±–µ–∑ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
  static bool _isValidApiKey(String key) {
    if (key.length < 20 || key.length > 100) return false;
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª—é—á —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã
    final validPattern = RegExp(r'^[A-Za-z0-9_-]+$');
    return validPattern.hasMatch(key);
  }
}

